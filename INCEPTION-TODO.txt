see todos in code
watchlist bauen (model etc)
loading indicator (als ui element in den viewcontrollern)
detail : genre clickbar, alle trailer anzeigen, alle bilder anzeigen
language hinzufügen zu api calls evtl
search/multi page berücksichtigen um alle results anzuzeigen (siehe iphone github lib, array mit total_count und pagesize)
evtl discover kategorien auch mit pages austatten
refactor code
	bessere namen vergeben vor allem für cells
	jsonparser andere lösung finden vllt direkt in model klassen oder methoden verbessern
	detailviews extrem refactoren (tableview reusable machen, computeTableData Methode ist 	ein witz, collectionviews, removefromfooter)


todo movies macht es wie folgt: mehere pages antriggern (page=x)
und liste erstellen und dann per /movie/list holen
//views
discover:
pages => show more than page 1
genre
1 column -- picture of recommended movie of this genre (see todomovies app)
=> detail 3 columns with movies/tv via section divided

popular 3 columns divivded tv and movies via section

top rated
top 250 tv
top 250 movie

func collectionView(collectionView: UICollectionView, willDisplayCell cell: UICollectionViewCell, forItemAtIndexPath indexPath: NSIndexPath) {
    if indexPath.item == (data.count-1) {
        loadData()
    }
}

http://api.themoviedb.org/3/discover/tv?api_key=###&sort_by=popularity.desc&with_genres=18



preferences:
empty cache, video and image preferences,account management, probably a lot more...

stats: see watched.li and other platforms for possible stats

watchlist:
seen, want to see, calendar (next airing)

detailview:
for movies:
seen button, add to watchlist

for tv shows:
actors, add to watchlist, completely seen buttons
seasons -> episodes, similiar
